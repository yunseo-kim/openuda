---
description: 
globs: 
alwaysApply: true
---
# Product Requirements Document

## 1. Executive Summary
OpenUda는 야기-우다(Yagi-Uda) 안테나의 형상 설계, 성능 예측 및 최적화를 클라이언트 사이드에서 제공하는 PWA(Progressive Web App) 지원 멀티플랫폼 웹 애플리케이션입니다. Windows 전용 YagiCAD 및 복잡한 GNU Radio 등의 대체재로, 사용자는 사전 정의된 프리셋 혹은 직접 입력한 설계 파라미터를 바탕으로 누구나 손쉽게 야기-우다 안테나를 설계하고, 실시간 성능 예측 및 최적화를 경험할 수 있습니다. WebAssembly로 컴파일된 nec2c 엔진을 통해 브라우저 상에서 직접 빠르고 정확한 성능 시뮬레이션이 가능합니다.

## 2. Problem Statement
기존 야기-우다 안테나 설계 소프트웨어(YagiCAD 등)는 Windows만 지원하고 초보자에게 어려운 복잡성을 지니고 있습니다. 오픈소스 대체재 또한 복잡하고 접근성이 떨어져 교육·연구 초심자가 사용하기 어렵습니다. 학생, 교사, 연구자, 아마추어 무선국 운용자 등은 손쉽고 직관적으로 접근할 수 있는 무료 웹 기반 도구의 부재로 인해 실험/설계 학습 및 직접 제작 과정에 불편을 겪고 있습니다. 플랫폼 구애를 받지 않고, 누구나 웹 브라우저에서 즉시 접근 가능하며, 학습 부담 없이 쉽게 설계와 최적화를 경험할 수 있는 솔루션이 필요합니다. 

## 3. Goals and Objectives
- **Primary Goal:**  
  누구나 접근 가능한 웹 기반 환경에서 야기-우다 안테나 설계, 최적화, 그리고 성능 예측을 지원한다.

- **Secondary Goals:**  
  - 다양한 표준 설계 포맷(YagiCAD의 .yc6, NEC의 .nec, 자체 json 파일 등) 입출력 지원  
  - 다양한 시각적 분석 도구(Line Chart, 2D/3D 방사 패턴 그래프) 제공  
  - 사용성 높은 PWA 앱 제공 및 모바일 환경에서도 원활하게 동작  
  - 실시간 상호작용적 UI 및 우수한 사용자 경험 제공
  - 입문자와 전문가 모두 사용 가능한 다양한 템플릿 및 프리셋 제공
  - 데이터 시각화 및 다변수 최적화 기능

- **Success Metrics:**  
  - 월간 활성 사용자 수(MAU)  
  - 입력 후 안테나 설계 성능 예측까지의 평균 소요시간  
  - 사용자 재방문율 및 템플릿 공유 건수  
  - 클라우드/오프라인 환경에서의 무중단 시뮬레이션 성공률(99% 이상)
  - 사용자 피드백(만족도, 진입장벽 및 사용 편의성)

## 4. Target Audience
### Primary Users
- 중고교, 대학교, 대학원 학생 및 교수: 과제, 수업, 연구용 설계 실습
- 과학 실습/기술과목 담당 교사: 실습 중심 수업 및 공개 수업 활용
- 아마추어 무선국 운용자: 직접 안테나 설계 및 성능 개선 목적
- 연령: 고등학생 이상, 15~40대 중심
- 입문자부터 고급 사용자까지 모두

### Secondary Users
- 과학관, 공공교육기관 운영자
- 교육 컨텐츠 제작자
- 안테나 연구소 및 관련 산업 관계자

## 5. User Stories
- "과학 선생님으로서, 학생들에게 웹에서 바로 안테나를 시각적으로 설계해서 수업에 활용하고 싶다."
- "공학과 대학생으로, 목표 주파수 대역에 가장 적합한 야기-우다 안테나 구조를 자동 최적화로 찾고 싶다."
- "아마추어 무선운용자로서, 직접 설계한 파라미터로 방사 패턴과 이득, VSWR 등을 실시간으로 확인하고 싶다."
- "연구자로서, YagiCAD 혹은 NEC 파일을 불러와 성능 예측 값을 바로 비교하고 싶다."
- "일반 사용자로서, 기존에 공유된 다양한 설계 템플릿을 찾아보고 내가 설계한 것을 업로드/공유하고 싶다."
- "무선 전파 실습을 준비하는 고등학생으로서, 브라우저에서 쉽게 안테나를 설계하여 내가 원하는 대로 조정해 보고 싶다."
- "연구를 준비하는 대학원생으로서, 다양한 대역과 파라미터를 실시간으로 바꾸며 성능을 시각화하고, 최적화 알고리즘을 쉽게 적용해보고 싶다."

## 6. Functional Requirements
### Core Features
- **메인 탭**
  - 사전 설계 프리셋(예시 제공) 선택 혹은 직접 파라미터 입력
  - 입력 파라미터: 도파기/반사기 위치·개수, 각 요소 길이·직경 등
  - 입력/수정 즉시 안테나 형상 상호작용 시각화(회전, 확대, 구조 변경 등)
  - 설계 저장/불러오기(.yc6, .nec, .json 지원)
  - Optimize 버튼을 통한 설계 파라미터 자동 최적화  
    - 최적화 목표: peak gain, F/B ratio, 균형 등 옵션 선택
    - 최적화 진행 과정 및 결과 UI 제공
- **Line Chart 탭**
  - 주파수에 따른 Gain, F/B ratio, 입력 임피던스, Effective Gain, VSWR 꺾은선그래프 표시
  - 사용자 지정 대역폭 분석
- **Pattern Analysis 탭**
  - Vertical/Horizontal plane 2D 방사 패턴 그래프
  - 상호작용 3D 방사 패턴 뷰어(회전, 포커스 등)
- **About 탭**
  - 서비스 소개, 엔진/사용 기술 정보, 오픈소스 라이선스 고지문, 지원 포맷 안내, 참고자료, 개발자 정보

### Supporting Features
- WebAssembly로 컴파일된 nec2c 엔진을 통한 실시간 시뮬레이션
- 드래그&드롭을 이용한 파일 입출력
- PWA: 홈 화면 추가, 오프라인 캐싱, 푸시 알림(기본 안내)
- 기본 다국어(한글/영어) 지원
- 유저 템플릿 라이브러리(설계안 공유): 나의 설계 업로드/타인 설계 다운로드
- 접근성 고려 UI(키보드 네비게이션, 명확한 대비 등)

## 7. Non-Functional Requirements
- **Performance:** 시뮬레이션 응답 시간 3초 이내 (일반 설계 기준)
- **Security:** 사용자 파일 및 데이터 로컬 처리, 개인정보 미수집
- **Usability:** 직관적이고 반응형 UI (데스크탑/태블릿/모바일 지원)
- **Scalability:** 유저 수∙설계 수 증가 대응, PWA 캐시 전략 적용
- **Compatibility:** 최신 Chrome/Edge/Firefox/Safari 브라우저, Android/iOS 모바일 브라우저

## 8. Technical Considerations
- **Architecture overview:**  
  - 클라이언트 중심 SPA, WebAssembly(nec2c), React 기반(Vite 등 최신 프레임워크)
- **Integration requirements:**  
  - nec2c WebAssembly 모듈 직접 연동 각 탭과 연동  
  - File API 활용한 .yc6, .nec, .json 지원
- **Data requirements:**  
  - 설계 파라미터 구조화(내부 JSON 규격)  
  - 사용자의 설계 라이브러리(로컬저장소 활용, 필요시 클라우드 연동 준비)
- **Third-party dependencies:**  
  - 그래픽: three.js, D3.js, plotly.js 등  
  - PWA: Workbox  
  - 국제화: i18next  
  - 기타: ESLint, Prettier 등 개발 보조

## 9. Success Metrics and KPIs
- 월간/일일 활성 사용자 수
- 신규/재방문 비율
- 설계 최적화∙시뮬레이션 성공률/평균 응답속도
- 사용자 설계 템플릿 업로드/다운로드 건수
- 모바일/PWA 설치율
- 이용자 만족도(평균 4.0/5.0 이상, 설문 기반)
- 오류/버그 리포트 건수 및 해결 속도

## 10. Timeline and Milestones
- **Phase 1 (MVP, 8주):**
  - 핵심 탭 기능(메인, Line Chart, Pattern Analysis, About)
  - nec2c WebAssembly 엔진 연동
  - 설계 파라미터 기반 2D/3D 안테나 시각화
  - 표준 파일 포맷 입출력 및 기본 시각화
  - PWA 기본 지원
- **Phase 2 (4주):**
  - 파라미터 자동 최적화, 다양한 최적화 옵션 추가
  - 방사 패턴 3D 뷰 개선, 반응형 UI 고도화
  - 다국어 지원, 템플릿 라이브러리(로컬 DB)
- **Phase 3 (6주):**
  - 유저 설계 공유/관리(클라우드 연동 준비)
  - 모바일 앱스토어(React Native/Flutter 기반) 버전 프로토타입
  - 알림/가이드 등 사용자 경험 개선

## 11. Risks and Mitigation
- **Technical risks:** WebAssembly 모듈 통합 난이도 (프로토타입 후 적절한 API 추상화로 완화 & 유닛테스트 강화)
- **Business risks:** 초기 사용자 확보 문제 (교육기관 커뮤니티, 아마추어 무선동호회 협력)
- **User adoption risks:** 설계 난이도 인지부족 (직관적 UI/가이드, 샘플 설계 제공으로 완화)

## 12. Future Considerations
- 설계 추천 AI 가이드 추가
- 클라우드 기반 설계 데이터 백업/복원 지원
- 커뮤니티 기반 설계 Q&A 및 공동편집
- 모바일 전용 앱스토어 배포
- 더 다양한 안테나 유형 지원(루프, 로그페리오딕 등)
- 오픈소스 공개 및 확장 API 제공
